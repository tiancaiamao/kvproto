// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.8.0
// source: deadlock.proto

package deadlock

import (
	context "context"
	streaming "github.com/cloudwego/kitex/pkg/streaming"
	_ "github.com/pingcap/kvproto/proto/kitex_gen/github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeadlockRequestType int32

const (
	DeadlockRequestType_Detect DeadlockRequestType = 0
	// CleanUpWaitFor cleans a single entry the transaction is waiting.
	DeadlockRequestType_CleanUpWaitFor DeadlockRequestType = 1
	// CleanUp cleans all entries the transaction is waiting.
	DeadlockRequestType_CleanUp DeadlockRequestType = 2
)

// Enum value maps for DeadlockRequestType.
var (
	DeadlockRequestType_name = map[int32]string{
		0: "Detect",
		1: "CleanUpWaitFor",
		2: "CleanUp",
	}
	DeadlockRequestType_value = map[string]int32{
		"Detect":         0,
		"CleanUpWaitFor": 1,
		"CleanUp":        2,
	}
)

func (x DeadlockRequestType) Enum() *DeadlockRequestType {
	p := new(DeadlockRequestType)
	*p = x
	return p
}

func (x DeadlockRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeadlockRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_deadlock_proto_enumTypes[0].Descriptor()
}

func (DeadlockRequestType) Type() protoreflect.EnumType {
	return &file_deadlock_proto_enumTypes[0]
}

func (x DeadlockRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeadlockRequestType.Descriptor instead.
func (DeadlockRequestType) EnumDescriptor() ([]byte, []int) {
	return file_deadlock_proto_rawDescGZIP(), []int{0}
}

type WaitForEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WaitForEntriesRequest) Reset() {
	*x = WaitForEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deadlock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForEntriesRequest) ProtoMessage() {}

func (x *WaitForEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deadlock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForEntriesRequest.ProtoReflect.Descriptor instead.
func (*WaitForEntriesRequest) Descriptor() ([]byte, []int) {
	return file_deadlock_proto_rawDescGZIP(), []int{0}
}

type WaitForEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*WaitForEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *WaitForEntriesResponse) Reset() {
	*x = WaitForEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deadlock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForEntriesResponse) ProtoMessage() {}

func (x *WaitForEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deadlock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForEntriesResponse.ProtoReflect.Descriptor instead.
func (*WaitForEntriesResponse) Descriptor() ([]byte, []int) {
	return file_deadlock_proto_rawDescGZIP(), []int{1}
}

func (x *WaitForEntriesResponse) GetEntries() []*WaitForEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type WaitForEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction id that is waiting.
	Txn uint64 `protobuf:"varint,1,opt,name=txn,proto3" json:"txn,omitempty"`
	// The transaction id that is being waited for.
	WaitForTxn uint64 `protobuf:"varint,2,opt,name=wait_for_txn,json=waitForTxn,proto3" json:"wait_for_txn,omitempty"`
	// The hash value of the key is being waited for.
	KeyHash uint64 `protobuf:"varint,3,opt,name=key_hash,json=keyHash,proto3" json:"key_hash,omitempty"`
	// The key the current txn is trying to lock.
	Key []byte `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// The tag came from the lock request's context.
	ResourceGroupTag []byte `protobuf:"bytes,5,opt,name=resource_group_tag,json=resourceGroupTag,proto3" json:"resource_group_tag,omitempty"`
	// Milliseconds it has been waits.
	WaitTime uint64 `protobuf:"varint,6,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
}

func (x *WaitForEntry) Reset() {
	*x = WaitForEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deadlock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForEntry) ProtoMessage() {}

func (x *WaitForEntry) ProtoReflect() protoreflect.Message {
	mi := &file_deadlock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForEntry.ProtoReflect.Descriptor instead.
func (*WaitForEntry) Descriptor() ([]byte, []int) {
	return file_deadlock_proto_rawDescGZIP(), []int{2}
}

func (x *WaitForEntry) GetTxn() uint64 {
	if x != nil {
		return x.Txn
	}
	return 0
}

func (x *WaitForEntry) GetWaitForTxn() uint64 {
	if x != nil {
		return x.WaitForTxn
	}
	return 0
}

func (x *WaitForEntry) GetKeyHash() uint64 {
	if x != nil {
		return x.KeyHash
	}
	return 0
}

func (x *WaitForEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WaitForEntry) GetResourceGroupTag() []byte {
	if x != nil {
		return x.ResourceGroupTag
	}
	return nil
}

func (x *WaitForEntry) GetWaitTime() uint64 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

type DeadlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tp    DeadlockRequestType `protobuf:"varint,1,opt,name=tp,proto3,enum=deadlock.DeadlockRequestType" json:"tp,omitempty"`
	Entry *WaitForEntry       `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *DeadlockRequest) Reset() {
	*x = DeadlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deadlock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeadlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadlockRequest) ProtoMessage() {}

func (x *DeadlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deadlock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadlockRequest.ProtoReflect.Descriptor instead.
func (*DeadlockRequest) Descriptor() ([]byte, []int) {
	return file_deadlock_proto_rawDescGZIP(), []int{3}
}

func (x *DeadlockRequest) GetTp() DeadlockRequestType {
	if x != nil {
		return x.Tp
	}
	return DeadlockRequestType_Detect
}

func (x *DeadlockRequest) GetEntry() *WaitForEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type DeadlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The same entry sent by DeadlockRequest, identifies the sender.
	Entry *WaitForEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// The key hash of the lock that is hold by the waiting transaction.
	DeadlockKeyHash uint64 `protobuf:"varint,2,opt,name=deadlock_key_hash,json=deadlockKeyHash,proto3" json:"deadlock_key_hash,omitempty"`
	// The other entries of the dead lock circle. The current entry is in `entry` field and  not
	// included in this field.
	WaitChain []*WaitForEntry `protobuf:"bytes,3,rep,name=wait_chain,json=waitChain,proto3" json:"wait_chain,omitempty"`
}

func (x *DeadlockResponse) Reset() {
	*x = DeadlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deadlock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeadlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadlockResponse) ProtoMessage() {}

func (x *DeadlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deadlock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadlockResponse.ProtoReflect.Descriptor instead.
func (*DeadlockResponse) Descriptor() ([]byte, []int) {
	return file_deadlock_proto_rawDescGZIP(), []int{4}
}

func (x *DeadlockResponse) GetEntry() *WaitForEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *DeadlockResponse) GetDeadlockKeyHash() uint64 {
	if x != nil {
		return x.DeadlockKeyHash
	}
	return 0
}

func (x *DeadlockResponse) GetWaitChain() []*WaitForEntry {
	if x != nil {
		return x.WaitChain
	}
	return nil
}

var File_deadlock_proto protoreflect.FileDescriptor

var file_deadlock_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x17, 0x0a, 0x15, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x57, 0x61, 0x69,
	0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0c,
	0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x78, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x20,
	0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x78, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x78, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0f, 0x44, 0x65, 0x61, 0x64,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x02, 0x74,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x74, 0x70, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xa9,
	0x01, 0x0a, 0x10, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x57, 0x61,
	0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x35, 0x0a, 0x0a, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x77, 0x61, 0x69, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2a, 0x42, 0x0a, 0x13, 0x44, 0x65,
	0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x10, 0x02, 0x32, 0xab,
	0x01, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x58, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x1f, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x57, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x57, 0x61, 0x69,
	0x74, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12,
	0x19, 0x2e, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x61, 0x64, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x35, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x63,
	0x61, 0x70, 0x2f, 0x6b, 0x76, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deadlock_proto_rawDescOnce sync.Once
	file_deadlock_proto_rawDescData = file_deadlock_proto_rawDesc
)

func file_deadlock_proto_rawDescGZIP() []byte {
	file_deadlock_proto_rawDescOnce.Do(func() {
		file_deadlock_proto_rawDescData = protoimpl.X.CompressGZIP(file_deadlock_proto_rawDescData)
	})
	return file_deadlock_proto_rawDescData
}

var file_deadlock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_deadlock_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_deadlock_proto_goTypes = []interface{}{
	(DeadlockRequestType)(0),       // 0: deadlock.DeadlockRequestType
	(*WaitForEntriesRequest)(nil),  // 1: deadlock.WaitForEntriesRequest
	(*WaitForEntriesResponse)(nil), // 2: deadlock.WaitForEntriesResponse
	(*WaitForEntry)(nil),           // 3: deadlock.WaitForEntry
	(*DeadlockRequest)(nil),        // 4: deadlock.DeadlockRequest
	(*DeadlockResponse)(nil),       // 5: deadlock.DeadlockResponse
}
var file_deadlock_proto_depIdxs = []int32{
	3, // 0: deadlock.WaitForEntriesResponse.entries:type_name -> deadlock.WaitForEntry
	0, // 1: deadlock.DeadlockRequest.tp:type_name -> deadlock.DeadlockRequestType
	3, // 2: deadlock.DeadlockRequest.entry:type_name -> deadlock.WaitForEntry
	3, // 3: deadlock.DeadlockResponse.entry:type_name -> deadlock.WaitForEntry
	3, // 4: deadlock.DeadlockResponse.wait_chain:type_name -> deadlock.WaitForEntry
	1, // 5: deadlock.Deadlock.GetWaitForEntries:input_type -> deadlock.WaitForEntriesRequest
	4, // 6: deadlock.Deadlock.Detect:input_type -> deadlock.DeadlockRequest
	2, // 7: deadlock.Deadlock.GetWaitForEntries:output_type -> deadlock.WaitForEntriesResponse
	5, // 8: deadlock.Deadlock.Detect:output_type -> deadlock.DeadlockResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_deadlock_proto_init() }
func file_deadlock_proto_init() {
	if File_deadlock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deadlock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deadlock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deadlock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deadlock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeadlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deadlock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeadlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deadlock_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deadlock_proto_goTypes,
		DependencyIndexes: file_deadlock_proto_depIdxs,
		EnumInfos:         file_deadlock_proto_enumTypes,
		MessageInfos:      file_deadlock_proto_msgTypes,
	}.Build()
	File_deadlock_proto = out.File
	file_deadlock_proto_rawDesc = nil
	file_deadlock_proto_goTypes = nil
	file_deadlock_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.1.2. DO NOT EDIT.

type Deadlock interface {
	GetWaitForEntries(ctx context.Context, req *WaitForEntriesRequest) (res *WaitForEntriesResponse, err error)
	Detect(stream Deadlock_DetectServer) (err error)
}

type Deadlock_DetectServer interface {
	streaming.Stream
	Recv() (*DeadlockRequest, error)
	Send(*DeadlockResponse) error
}
