// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.8.0
// source: replication_modepb.proto

package replication_modepb

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicationMode int32

const (
	// The standard mode. Replicate logs to majority peer.
	ReplicationMode_MAJORITY ReplicationMode = 0
	// DR mode. Replicate logs among 2 DCs.
	ReplicationMode_DR_AUTO_SYNC ReplicationMode = 1
)

// Enum value maps for ReplicationMode.
var (
	ReplicationMode_name = map[int32]string{
		0: "MAJORITY",
		1: "DR_AUTO_SYNC",
	}
	ReplicationMode_value = map[string]int32{
		"MAJORITY":     0,
		"DR_AUTO_SYNC": 1,
	}
)

func (x ReplicationMode) Enum() *ReplicationMode {
	p := new(ReplicationMode)
	*p = x
	return p
}

func (x ReplicationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_replication_modepb_proto_enumTypes[0].Descriptor()
}

func (ReplicationMode) Type() protoreflect.EnumType {
	return &file_replication_modepb_proto_enumTypes[0]
}

func (x ReplicationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicationMode.Descriptor instead.
func (ReplicationMode) EnumDescriptor() ([]byte, []int) {
	return file_replication_modepb_proto_rawDescGZIP(), []int{0}
}

type DRAutoSyncState int32

const (
	// Raft logs need to sync between different DCs
	DRAutoSyncState_SYNC DRAutoSyncState = 0
	// Raft logs need to sync to majority peers
	DRAutoSyncState_ASYNC DRAutoSyncState = 1
	// Switching from ASYNC to SYNC mode
	DRAutoSyncState_SYNC_RECOVER DRAutoSyncState = 2
)

// Enum value maps for DRAutoSyncState.
var (
	DRAutoSyncState_name = map[int32]string{
		0: "SYNC",
		1: "ASYNC",
		2: "SYNC_RECOVER",
	}
	DRAutoSyncState_value = map[string]int32{
		"SYNC":         0,
		"ASYNC":        1,
		"SYNC_RECOVER": 2,
	}
)

func (x DRAutoSyncState) Enum() *DRAutoSyncState {
	p := new(DRAutoSyncState)
	*p = x
	return p
}

func (x DRAutoSyncState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DRAutoSyncState) Descriptor() protoreflect.EnumDescriptor {
	return file_replication_modepb_proto_enumTypes[1].Descriptor()
}

func (DRAutoSyncState) Type() protoreflect.EnumType {
	return &file_replication_modepb_proto_enumTypes[1]
}

func (x DRAutoSyncState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DRAutoSyncState.Descriptor instead.
func (DRAutoSyncState) EnumDescriptor() ([]byte, []int) {
	return file_replication_modepb_proto_rawDescGZIP(), []int{1}
}

type RegionReplicationState int32

const (
	// The region's state is unknown
	RegionReplicationState_UNKNOWN RegionReplicationState = 0
	// Logs sync to majority peers
	RegionReplicationState_SIMPLE_MAJORITY RegionReplicationState = 1
	// Logs sync to different DCs
	RegionReplicationState_INTEGRITY_OVER_LABEL RegionReplicationState = 2
)

// Enum value maps for RegionReplicationState.
var (
	RegionReplicationState_name = map[int32]string{
		0: "UNKNOWN",
		1: "SIMPLE_MAJORITY",
		2: "INTEGRITY_OVER_LABEL",
	}
	RegionReplicationState_value = map[string]int32{
		"UNKNOWN":              0,
		"SIMPLE_MAJORITY":      1,
		"INTEGRITY_OVER_LABEL": 2,
	}
)

func (x RegionReplicationState) Enum() *RegionReplicationState {
	p := new(RegionReplicationState)
	*p = x
	return p
}

func (x RegionReplicationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegionReplicationState) Descriptor() protoreflect.EnumDescriptor {
	return file_replication_modepb_proto_enumTypes[2].Descriptor()
}

func (RegionReplicationState) Type() protoreflect.EnumType {
	return &file_replication_modepb_proto_enumTypes[2]
}

func (x RegionReplicationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegionReplicationState.Descriptor instead.
func (RegionReplicationState) EnumDescriptor() ([]byte, []int) {
	return file_replication_modepb_proto_rawDescGZIP(), []int{2}
}

// The replication status sync from PD to TiKV.
type ReplicationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode       ReplicationMode `protobuf:"varint,1,opt,name=mode,proto3,enum=replication_modepb.ReplicationMode" json:"mode,omitempty"`
	DrAutoSync *DRAutoSync     `protobuf:"bytes,2,opt,name=dr_auto_sync,json=drAutoSync,proto3" json:"dr_auto_sync,omitempty"`
}

func (x *ReplicationStatus) Reset() {
	*x = ReplicationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_modepb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatus) ProtoMessage() {}

func (x *ReplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_replication_modepb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatus.ProtoReflect.Descriptor instead.
func (*ReplicationStatus) Descriptor() ([]byte, []int) {
	return file_replication_modepb_proto_rawDescGZIP(), []int{0}
}

func (x *ReplicationStatus) GetMode() ReplicationMode {
	if x != nil {
		return x.Mode
	}
	return ReplicationMode_MAJORITY
}

func (x *ReplicationStatus) GetDrAutoSync() *DRAutoSync {
	if x != nil {
		return x.DrAutoSync
	}
	return nil
}

// The status of dr-autosync mode.
type DRAutoSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key of the label that used for distinguish different DC.
	LabelKey string          `protobuf:"bytes,1,opt,name=label_key,json=labelKey,proto3" json:"label_key,omitempty"`
	State    DRAutoSyncState `protobuf:"varint,2,opt,name=state,proto3,enum=replication_modepb.DRAutoSyncState" json:"state,omitempty"`
	// Unique ID of the state, it increases after each state transfer.
	StateId uint64 `protobuf:"varint,3,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	// Duration to wait before switching to SYNC by force (in seconds)
	WaitSyncTimeoutHint int32 `protobuf:"varint,4,opt,name=wait_sync_timeout_hint,json=waitSyncTimeoutHint,proto3" json:"wait_sync_timeout_hint,omitempty"`
}

func (x *DRAutoSync) Reset() {
	*x = DRAutoSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_modepb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DRAutoSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DRAutoSync) ProtoMessage() {}

func (x *DRAutoSync) ProtoReflect() protoreflect.Message {
	mi := &file_replication_modepb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DRAutoSync.ProtoReflect.Descriptor instead.
func (*DRAutoSync) Descriptor() ([]byte, []int) {
	return file_replication_modepb_proto_rawDescGZIP(), []int{1}
}

func (x *DRAutoSync) GetLabelKey() string {
	if x != nil {
		return x.LabelKey
	}
	return ""
}

func (x *DRAutoSync) GetState() DRAutoSyncState {
	if x != nil {
		return x.State
	}
	return DRAutoSyncState_SYNC
}

func (x *DRAutoSync) GetStateId() uint64 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *DRAutoSync) GetWaitSyncTimeoutHint() int32 {
	if x != nil {
		return x.WaitSyncTimeoutHint
	}
	return 0
}

// The replication status sync from TiKV to PD.
type RegionReplicationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State RegionReplicationState `protobuf:"varint,1,opt,name=state,proto3,enum=replication_modepb.RegionReplicationState" json:"state,omitempty"`
	// Unique ID of the state, it increases after each state transfer.
	StateId uint64 `protobuf:"varint,2,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
}

func (x *RegionReplicationStatus) Reset() {
	*x = RegionReplicationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replication_modepb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionReplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionReplicationStatus) ProtoMessage() {}

func (x *RegionReplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_replication_modepb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionReplicationStatus.ProtoReflect.Descriptor instead.
func (*RegionReplicationStatus) Descriptor() ([]byte, []int) {
	return file_replication_modepb_proto_rawDescGZIP(), []int{2}
}

func (x *RegionReplicationStatus) GetState() RegionReplicationState {
	if x != nil {
		return x.State
	}
	return RegionReplicationState_UNKNOWN
}

func (x *RegionReplicationStatus) GetStateId() uint64 {
	if x != nil {
		return x.StateId
	}
	return 0
}

var File_replication_modepb_proto protoreflect.FileDescriptor

var file_replication_modepb_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x70, 0x62, 0x22, 0x8e,
	0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a,
	0x0c, 0x64, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x52, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x0a, 0x64, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x22,
	0xb4, 0x01, 0x0a, 0x0a, 0x44, 0x52, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x70, 0x62, 0x2e,
	0x44, 0x52, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x16, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x77, 0x61, 0x69, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x2a, 0x31,
	0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x44, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10,
	0x01, 0x2a, 0x38, 0x0a, 0x0f, 0x44, 0x52, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x4e,
	0x43, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x54, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4a,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x54, 0x45, 0x47,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10,
	0x02, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x69, 0x6e, 0x67, 0x63, 0x61, 0x70, 0x2f, 0x6b, 0x76, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_replication_modepb_proto_rawDescOnce sync.Once
	file_replication_modepb_proto_rawDescData = file_replication_modepb_proto_rawDesc
)

func file_replication_modepb_proto_rawDescGZIP() []byte {
	file_replication_modepb_proto_rawDescOnce.Do(func() {
		file_replication_modepb_proto_rawDescData = protoimpl.X.CompressGZIP(file_replication_modepb_proto_rawDescData)
	})
	return file_replication_modepb_proto_rawDescData
}

var file_replication_modepb_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_replication_modepb_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_replication_modepb_proto_goTypes = []interface{}{
	(ReplicationMode)(0),            // 0: replication_modepb.ReplicationMode
	(DRAutoSyncState)(0),            // 1: replication_modepb.DRAutoSyncState
	(RegionReplicationState)(0),     // 2: replication_modepb.RegionReplicationState
	(*ReplicationStatus)(nil),       // 3: replication_modepb.ReplicationStatus
	(*DRAutoSync)(nil),              // 4: replication_modepb.DRAutoSync
	(*RegionReplicationStatus)(nil), // 5: replication_modepb.RegionReplicationStatus
}
var file_replication_modepb_proto_depIdxs = []int32{
	0, // 0: replication_modepb.ReplicationStatus.mode:type_name -> replication_modepb.ReplicationMode
	4, // 1: replication_modepb.ReplicationStatus.dr_auto_sync:type_name -> replication_modepb.DRAutoSync
	1, // 2: replication_modepb.DRAutoSync.state:type_name -> replication_modepb.DRAutoSyncState
	2, // 3: replication_modepb.RegionReplicationStatus.state:type_name -> replication_modepb.RegionReplicationState
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_replication_modepb_proto_init() }
func file_replication_modepb_proto_init() {
	if File_replication_modepb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_replication_modepb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_modepb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DRAutoSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replication_modepb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionReplicationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_replication_modepb_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_replication_modepb_proto_goTypes,
		DependencyIndexes: file_replication_modepb_proto_depIdxs,
		EnumInfos:         file_replication_modepb_proto_enumTypes,
		MessageInfos:      file_replication_modepb_proto_msgTypes,
	}.Build()
	File_replication_modepb_proto = out.File
	file_replication_modepb_proto_rawDesc = nil
	file_replication_modepb_proto_goTypes = nil
	file_replication_modepb_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.1.3. DO NOT EDIT.
