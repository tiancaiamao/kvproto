// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.8.0
// source: debugpb.proto

package debugpb

import (
	context "context"
	streaming "github.com/cloudwego/kitex/pkg/streaming"
	eraftpb "github.com/pingcap/kvproto/proto/kitex_gen/eraftpb"
	_ "github.com/pingcap/kvproto/proto/kitex_gen/github.com/gogo/protobuf/gogoproto"
	kvrpcpb "github.com/pingcap/kvproto/proto/kitex_gen/kvrpcpb"
	raft_serverpb "github.com/pingcap/kvproto/proto/kitex_gen/raft_serverpb"
	_ "github.com/pingcap/kvproto/proto/kitex_gen/rustproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DB int32

const (
	DB_INVALID DB = 0
	DB_KV      DB = 1
	DB_RAFT    DB = 2
)

// Enum value maps for DB.
var (
	DB_name = map[int32]string{
		0: "INVALID",
		1: "KV",
		2: "RAFT",
	}
	DB_value = map[string]int32{
		"INVALID": 0,
		"KV":      1,
		"RAFT":    2,
	}
)

func (x DB) Enum() *DB {
	p := new(DB)
	*p = x
	return p
}

func (x DB) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DB) Descriptor() protoreflect.EnumDescriptor {
	return file_debugpb_proto_enumTypes[0].Descriptor()
}

func (DB) Type() protoreflect.EnumType {
	return &file_debugpb_proto_enumTypes[0]
}

func (x DB) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DB.Descriptor instead.
func (DB) EnumDescriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{0}
}

type MODULE int32

const (
	MODULE_UNUSED      MODULE = 0
	MODULE_KVDB        MODULE = 1
	MODULE_RAFTDB      MODULE = 2
	MODULE_READPOOL    MODULE = 3
	MODULE_SERVER      MODULE = 4
	MODULE_STORAGE     MODULE = 5
	MODULE_PD          MODULE = 6
	MODULE_METRIC      MODULE = 7
	MODULE_COPROCESSOR MODULE = 8
	MODULE_SECURITY    MODULE = 9
	MODULE_IMPORT      MODULE = 10
)

// Enum value maps for MODULE.
var (
	MODULE_name = map[int32]string{
		0:  "UNUSED",
		1:  "KVDB",
		2:  "RAFTDB",
		3:  "READPOOL",
		4:  "SERVER",
		5:  "STORAGE",
		6:  "PD",
		7:  "METRIC",
		8:  "COPROCESSOR",
		9:  "SECURITY",
		10: "IMPORT",
	}
	MODULE_value = map[string]int32{
		"UNUSED":      0,
		"KVDB":        1,
		"RAFTDB":      2,
		"READPOOL":    3,
		"SERVER":      4,
		"STORAGE":     5,
		"PD":          6,
		"METRIC":      7,
		"COPROCESSOR": 8,
		"SECURITY":    9,
		"IMPORT":      10,
	}
)

func (x MODULE) Enum() *MODULE {
	p := new(MODULE)
	*p = x
	return p
}

func (x MODULE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MODULE) Descriptor() protoreflect.EnumDescriptor {
	return file_debugpb_proto_enumTypes[1].Descriptor()
}

func (MODULE) Type() protoreflect.EnumType {
	return &file_debugpb_proto_enumTypes[1]
}

func (x MODULE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MODULE.Descriptor instead.
func (MODULE) EnumDescriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{1}
}

type BottommostLevelCompaction int32

const (
	// Skip bottommost level compaction
	BottommostLevelCompaction_Skip BottommostLevelCompaction = 0
	// Force bottommost level compaction
	BottommostLevelCompaction_Force BottommostLevelCompaction = 1
	// Compact bottommost level if there is a compaction filter.
	BottommostLevelCompaction_IfHaveCompactionFilter BottommostLevelCompaction = 2
)

// Enum value maps for BottommostLevelCompaction.
var (
	BottommostLevelCompaction_name = map[int32]string{
		0: "Skip",
		1: "Force",
		2: "IfHaveCompactionFilter",
	}
	BottommostLevelCompaction_value = map[string]int32{
		"Skip":                   0,
		"Force":                  1,
		"IfHaveCompactionFilter": 2,
	}
)

func (x BottommostLevelCompaction) Enum() *BottommostLevelCompaction {
	p := new(BottommostLevelCompaction)
	*p = x
	return p
}

func (x BottommostLevelCompaction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BottommostLevelCompaction) Descriptor() protoreflect.EnumDescriptor {
	return file_debugpb_proto_enumTypes[2].Descriptor()
}

func (BottommostLevelCompaction) Type() protoreflect.EnumType {
	return &file_debugpb_proto_enumTypes[2]
}

func (x BottommostLevelCompaction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BottommostLevelCompaction.Descriptor instead.
func (BottommostLevelCompaction) EnumDescriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{2}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db  DB     `protobuf:"varint,1,opt,name=db,proto3,enum=debugpb.DB" json:"db,omitempty"`
	Cf  string `protobuf:"bytes,2,opt,name=cf,proto3" json:"cf,omitempty"`
	Key []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetDb() DB {
	if x != nil {
		return x.Db
	}
	return DB_INVALID
}

func (x *GetRequest) GetCf() string {
	if x != nil {
		return x.Cf
	}
	return ""
}

func (x *GetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RaftLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId uint64 `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	LogIndex uint64 `protobuf:"varint,2,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
}

func (x *RaftLogRequest) Reset() {
	*x = RaftLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftLogRequest) ProtoMessage() {}

func (x *RaftLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftLogRequest.ProtoReflect.Descriptor instead.
func (*RaftLogRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{2}
}

func (x *RaftLogRequest) GetRegionId() uint64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *RaftLogRequest) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

type RaftLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *eraftpb.Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *RaftLogResponse) Reset() {
	*x = RaftLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftLogResponse) ProtoMessage() {}

func (x *RaftLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftLogResponse.ProtoReflect.Descriptor instead.
func (*RaftLogResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{3}
}

func (x *RaftLogResponse) GetEntry() *eraftpb.Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type RegionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId uint64 `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *RegionInfoRequest) Reset() {
	*x = RegionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionInfoRequest) ProtoMessage() {}

func (x *RegionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionInfoRequest.ProtoReflect.Descriptor instead.
func (*RegionInfoRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{4}
}

func (x *RegionInfoRequest) GetRegionId() uint64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type RegionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaftLocalState   *raft_serverpb.RaftLocalState   `protobuf:"bytes,1,opt,name=raft_local_state,json=raftLocalState,proto3" json:"raft_local_state,omitempty"`
	RaftApplyState   *raft_serverpb.RaftApplyState   `protobuf:"bytes,2,opt,name=raft_apply_state,json=raftApplyState,proto3" json:"raft_apply_state,omitempty"`
	RegionLocalState *raft_serverpb.RegionLocalState `protobuf:"bytes,3,opt,name=region_local_state,json=regionLocalState,proto3" json:"region_local_state,omitempty"`
}

func (x *RegionInfoResponse) Reset() {
	*x = RegionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionInfoResponse) ProtoMessage() {}

func (x *RegionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionInfoResponse.ProtoReflect.Descriptor instead.
func (*RegionInfoResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{5}
}

func (x *RegionInfoResponse) GetRaftLocalState() *raft_serverpb.RaftLocalState {
	if x != nil {
		return x.RaftLocalState
	}
	return nil
}

func (x *RegionInfoResponse) GetRaftApplyState() *raft_serverpb.RaftApplyState {
	if x != nil {
		return x.RaftApplyState
	}
	return nil
}

func (x *RegionInfoResponse) GetRegionLocalState() *raft_serverpb.RegionLocalState {
	if x != nil {
		return x.RegionLocalState
	}
	return nil
}

type RegionSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId uint64   `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	Cfs      []string `protobuf:"bytes,2,rep,name=cfs,proto3" json:"cfs,omitempty"`
}

func (x *RegionSizeRequest) Reset() {
	*x = RegionSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionSizeRequest) ProtoMessage() {}

func (x *RegionSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionSizeRequest.ProtoReflect.Descriptor instead.
func (*RegionSizeRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{6}
}

func (x *RegionSizeRequest) GetRegionId() uint64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *RegionSizeRequest) GetCfs() []string {
	if x != nil {
		return x.Cfs
	}
	return nil
}

type RegionSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*RegionSizeResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *RegionSizeResponse) Reset() {
	*x = RegionSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionSizeResponse) ProtoMessage() {}

func (x *RegionSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionSizeResponse.ProtoReflect.Descriptor instead.
func (*RegionSizeResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{7}
}

func (x *RegionSizeResponse) GetEntries() []*RegionSizeResponse_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ScanMvccRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromKey []byte `protobuf:"bytes,1,opt,name=from_key,json=fromKey,proto3" json:"from_key,omitempty"`
	ToKey   []byte `protobuf:"bytes,2,opt,name=to_key,json=toKey,proto3" json:"to_key,omitempty"`
	Limit   uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ScanMvccRequest) Reset() {
	*x = ScanMvccRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanMvccRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanMvccRequest) ProtoMessage() {}

func (x *ScanMvccRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanMvccRequest.ProtoReflect.Descriptor instead.
func (*ScanMvccRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{8}
}

func (x *ScanMvccRequest) GetFromKey() []byte {
	if x != nil {
		return x.FromKey
	}
	return nil
}

func (x *ScanMvccRequest) GetToKey() []byte {
	if x != nil {
		return x.ToKey
	}
	return nil
}

func (x *ScanMvccRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ScanMvccResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  []byte            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Info *kvrpcpb.MvccInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ScanMvccResponse) Reset() {
	*x = ScanMvccResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanMvccResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanMvccResponse) ProtoMessage() {}

func (x *ScanMvccResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanMvccResponse.ProtoReflect.Descriptor instead.
func (*ScanMvccResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{9}
}

func (x *ScanMvccResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ScanMvccResponse) GetInfo() *kvrpcpb.MvccInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CompactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Db                        DB                        `protobuf:"varint,1,opt,name=db,proto3,enum=debugpb.DB" json:"db,omitempty"`
	Cf                        string                    `protobuf:"bytes,2,opt,name=cf,proto3" json:"cf,omitempty"`
	FromKey                   []byte                    `protobuf:"bytes,3,opt,name=from_key,json=fromKey,proto3" json:"from_key,omitempty"`
	ToKey                     []byte                    `protobuf:"bytes,4,opt,name=to_key,json=toKey,proto3" json:"to_key,omitempty"`
	Threads                   uint32                    `protobuf:"varint,5,opt,name=threads,proto3" json:"threads,omitempty"`
	BottommostLevelCompaction BottommostLevelCompaction `protobuf:"varint,6,opt,name=bottommost_level_compaction,json=bottommostLevelCompaction,proto3,enum=debugpb.BottommostLevelCompaction" json:"bottommost_level_compaction,omitempty"`
}

func (x *CompactRequest) Reset() {
	*x = CompactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactRequest) ProtoMessage() {}

func (x *CompactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactRequest.ProtoReflect.Descriptor instead.
func (*CompactRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{10}
}

func (x *CompactRequest) GetDb() DB {
	if x != nil {
		return x.Db
	}
	return DB_INVALID
}

func (x *CompactRequest) GetCf() string {
	if x != nil {
		return x.Cf
	}
	return ""
}

func (x *CompactRequest) GetFromKey() []byte {
	if x != nil {
		return x.FromKey
	}
	return nil
}

func (x *CompactRequest) GetToKey() []byte {
	if x != nil {
		return x.ToKey
	}
	return nil
}

func (x *CompactRequest) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *CompactRequest) GetBottommostLevelCompaction() BottommostLevelCompaction {
	if x != nil {
		return x.BottommostLevelCompaction
	}
	return BottommostLevelCompaction_Skip
}

type CompactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompactResponse) Reset() {
	*x = CompactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactResponse) ProtoMessage() {}

func (x *CompactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactResponse.ProtoReflect.Descriptor instead.
func (*CompactResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{11}
}

type InjectFailPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Actions string `protobuf:"bytes,2,opt,name=actions,proto3" json:"actions,omitempty"`
}

func (x *InjectFailPointRequest) Reset() {
	*x = InjectFailPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectFailPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectFailPointRequest) ProtoMessage() {}

func (x *InjectFailPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectFailPointRequest.ProtoReflect.Descriptor instead.
func (*InjectFailPointRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{12}
}

func (x *InjectFailPointRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InjectFailPointRequest) GetActions() string {
	if x != nil {
		return x.Actions
	}
	return ""
}

type InjectFailPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InjectFailPointResponse) Reset() {
	*x = InjectFailPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectFailPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectFailPointResponse) ProtoMessage() {}

func (x *InjectFailPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectFailPointResponse.ProtoReflect.Descriptor instead.
func (*InjectFailPointResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{13}
}

type RecoverFailPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RecoverFailPointRequest) Reset() {
	*x = RecoverFailPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverFailPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverFailPointRequest) ProtoMessage() {}

func (x *RecoverFailPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverFailPointRequest.ProtoReflect.Descriptor instead.
func (*RecoverFailPointRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{14}
}

func (x *RecoverFailPointRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RecoverFailPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoverFailPointResponse) Reset() {
	*x = RecoverFailPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverFailPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverFailPointResponse) ProtoMessage() {}

func (x *RecoverFailPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverFailPointResponse.ProtoReflect.Descriptor instead.
func (*RecoverFailPointResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{15}
}

type ListFailPointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFailPointsRequest) Reset() {
	*x = ListFailPointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFailPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFailPointsRequest) ProtoMessage() {}

func (x *ListFailPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFailPointsRequest.ProtoReflect.Descriptor instead.
func (*ListFailPointsRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{16}
}

type ListFailPointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ListFailPointsResponse_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListFailPointsResponse) Reset() {
	*x = ListFailPointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFailPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFailPointsResponse) ProtoMessage() {}

func (x *ListFailPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFailPointsResponse.ProtoReflect.Descriptor instead.
func (*ListFailPointsResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{17}
}

func (x *ListFailPointsResponse) GetEntries() []*ListFailPointsResponse_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All bool `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
}

func (x *GetMetricsRequest) Reset() {
	*x = GetMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsRequest) ProtoMessage() {}

func (x *GetMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{18}
}

func (x *GetMetricsRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type GetMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prometheus  string `protobuf:"bytes,1,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	RocksdbKv   string `protobuf:"bytes,2,opt,name=rocksdb_kv,json=rocksdbKv,proto3" json:"rocksdb_kv,omitempty"`
	RocksdbRaft string `protobuf:"bytes,3,opt,name=rocksdb_raft,json=rocksdbRaft,proto3" json:"rocksdb_raft,omitempty"`
	Jemalloc    string `protobuf:"bytes,4,opt,name=jemalloc,proto3" json:"jemalloc,omitempty"`
	StoreId     uint64 `protobuf:"varint,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *GetMetricsResponse) Reset() {
	*x = GetMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsResponse) ProtoMessage() {}

func (x *GetMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{19}
}

func (x *GetMetricsResponse) GetPrometheus() string {
	if x != nil {
		return x.Prometheus
	}
	return ""
}

func (x *GetMetricsResponse) GetRocksdbKv() string {
	if x != nil {
		return x.RocksdbKv
	}
	return ""
}

func (x *GetMetricsResponse) GetRocksdbRaft() string {
	if x != nil {
		return x.RocksdbRaft
	}
	return ""
}

func (x *GetMetricsResponse) GetJemalloc() string {
	if x != nil {
		return x.Jemalloc
	}
	return ""
}

func (x *GetMetricsResponse) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

type RegionConsistencyCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId uint64 `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *RegionConsistencyCheckRequest) Reset() {
	*x = RegionConsistencyCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionConsistencyCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionConsistencyCheckRequest) ProtoMessage() {}

func (x *RegionConsistencyCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionConsistencyCheckRequest.ProtoReflect.Descriptor instead.
func (*RegionConsistencyCheckRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{20}
}

func (x *RegionConsistencyCheckRequest) GetRegionId() uint64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type RegionConsistencyCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegionConsistencyCheckResponse) Reset() {
	*x = RegionConsistencyCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionConsistencyCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionConsistencyCheckResponse) ProtoMessage() {}

func (x *RegionConsistencyCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionConsistencyCheckResponse.ProtoReflect.Descriptor instead.
func (*RegionConsistencyCheckResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{21}
}

type ModifyTikvConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module      MODULE `protobuf:"varint,1,opt,name=module,proto3,enum=debugpb.MODULE" json:"module,omitempty"`
	ConfigName  string `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	ConfigValue string `protobuf:"bytes,3,opt,name=config_value,json=configValue,proto3" json:"config_value,omitempty"`
}

func (x *ModifyTikvConfigRequest) Reset() {
	*x = ModifyTikvConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyTikvConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTikvConfigRequest) ProtoMessage() {}

func (x *ModifyTikvConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTikvConfigRequest.ProtoReflect.Descriptor instead.
func (*ModifyTikvConfigRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{22}
}

func (x *ModifyTikvConfigRequest) GetModule() MODULE {
	if x != nil {
		return x.Module
	}
	return MODULE_UNUSED
}

func (x *ModifyTikvConfigRequest) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ModifyTikvConfigRequest) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

type ModifyTikvConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyTikvConfigResponse) Reset() {
	*x = ModifyTikvConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyTikvConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTikvConfigResponse) ProtoMessage() {}

func (x *ModifyTikvConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTikvConfigResponse.ProtoReflect.Descriptor instead.
func (*ModifyTikvConfigResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{23}
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{24}
}

func (x *Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetRegionPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId uint64 `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *GetRegionPropertiesRequest) Reset() {
	*x = GetRegionPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionPropertiesRequest) ProtoMessage() {}

func (x *GetRegionPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionPropertiesRequest.ProtoReflect.Descriptor instead.
func (*GetRegionPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{25}
}

func (x *GetRegionPropertiesRequest) GetRegionId() uint64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type GetRegionPropertiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Props []*Property `protobuf:"bytes,1,rep,name=props,proto3" json:"props,omitempty"`
}

func (x *GetRegionPropertiesResponse) Reset() {
	*x = GetRegionPropertiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionPropertiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionPropertiesResponse) ProtoMessage() {}

func (x *GetRegionPropertiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionPropertiesResponse.ProtoReflect.Descriptor instead.
func (*GetRegionPropertiesResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{26}
}

func (x *GetRegionPropertiesResponse) GetProps() []*Property {
	if x != nil {
		return x.Props
	}
	return nil
}

type GetStoreInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStoreInfoRequest) Reset() {
	*x = GetStoreInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreInfoRequest) ProtoMessage() {}

func (x *GetStoreInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreInfoRequest.ProtoReflect.Descriptor instead.
func (*GetStoreInfoRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{27}
}

type GetStoreInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId    uint64             `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ApiVersion kvrpcpb.APIVersion `protobuf:"varint,2,opt,name=api_version,json=apiVersion,proto3,enum=kvrpcpb.APIVersion" json:"api_version,omitempty"`
}

func (x *GetStoreInfoResponse) Reset() {
	*x = GetStoreInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreInfoResponse) ProtoMessage() {}

func (x *GetStoreInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStoreInfoResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{28}
}

func (x *GetStoreInfoResponse) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *GetStoreInfoResponse) GetApiVersion() kvrpcpb.APIVersion {
	if x != nil {
		return x.ApiVersion
	}
	return kvrpcpb.APIVersion_V1
}

type GetClusterInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetClusterInfoRequest) Reset() {
	*x = GetClusterInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoRequest) ProtoMessage() {}

func (x *GetClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{29}
}

type GetClusterInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId uint64 `protobuf:"varint,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *GetClusterInfoResponse) Reset() {
	*x = GetClusterInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoResponse) ProtoMessage() {}

func (x *GetClusterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetClusterInfoResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{30}
}

func (x *GetClusterInfoResponse) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

type GetAllRegionsInStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRegionsInStoreRequest) Reset() {
	*x = GetAllRegionsInStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRegionsInStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRegionsInStoreRequest) ProtoMessage() {}

func (x *GetAllRegionsInStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRegionsInStoreRequest.ProtoReflect.Descriptor instead.
func (*GetAllRegionsInStoreRequest) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{31}
}

type GetAllRegionsInStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions []uint64 `protobuf:"varint,1,rep,packed,name=regions,proto3" json:"regions,omitempty"`
}

func (x *GetAllRegionsInStoreResponse) Reset() {
	*x = GetAllRegionsInStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRegionsInStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRegionsInStoreResponse) ProtoMessage() {}

func (x *GetAllRegionsInStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRegionsInStoreResponse.ProtoReflect.Descriptor instead.
func (*GetAllRegionsInStoreResponse) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{32}
}

func (x *GetAllRegionsInStoreResponse) GetRegions() []uint64 {
	if x != nil {
		return x.Regions
	}
	return nil
}

type RegionSizeResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cf   string `protobuf:"bytes,1,opt,name=cf,proto3" json:"cf,omitempty"`
	Size uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *RegionSizeResponse_Entry) Reset() {
	*x = RegionSizeResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionSizeResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionSizeResponse_Entry) ProtoMessage() {}

func (x *RegionSizeResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionSizeResponse_Entry.ProtoReflect.Descriptor instead.
func (*RegionSizeResponse_Entry) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{7, 0}
}

func (x *RegionSizeResponse_Entry) GetCf() string {
	if x != nil {
		return x.Cf
	}
	return ""
}

func (x *RegionSizeResponse_Entry) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListFailPointsResponse_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Actions string `protobuf:"bytes,2,opt,name=actions,proto3" json:"actions,omitempty"`
}

func (x *ListFailPointsResponse_Entry) Reset() {
	*x = ListFailPointsResponse_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debugpb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFailPointsResponse_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFailPointsResponse_Entry) ProtoMessage() {}

func (x *ListFailPointsResponse_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_debugpb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFailPointsResponse_Entry.ProtoReflect.Descriptor instead.
func (*ListFailPointsResponse_Entry) Descriptor() ([]byte, []int) {
	return file_debugpb_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListFailPointsResponse_Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListFailPointsResponse_Entry) GetActions() string {
	if x != nil {
		return x.Actions
	}
	return ""
}

var File_debugpb_proto protoreflect.FileDescriptor

var file_debugpb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x1a, 0x0d, 0x65, 0x72, 0x61, 0x66, 0x74, 0x70,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6b, 0x76, 0x72, 0x70, 0x63, 0x70, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x72, 0x75, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x42, 0x52, 0x02, 0x64, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x63, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x66, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x23, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x52, 0x61, 0x66, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x37, 0x0a, 0x0f, 0x52, 0x61, 0x66, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x72, 0x61, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x30, 0x0a, 0x11, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x12,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x61, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x66,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x72, 0x61, 0x66,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x72,
	0x61, 0x66, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x72, 0x61, 0x66, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x73, 0x22, 0x7e, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x2b, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x63, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x59, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6e, 0x4d,
	0x76, 0x63, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x4b, 0x0a, 0x10, 0x53, 0x63, 0x61, 0x6e, 0x4d, 0x76, 0x63, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x72, 0x70, 0x63, 0x70, 0x62,
	0x2e, 0x4d, 0x76, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0xed, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x42, 0x52, 0x02, 0x64, 0x62, 0x12,
	0x0e, 0x0a, 0x02, 0x63, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x66, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x62, 0x0a, 0x1b, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x6d, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x6d, 0x6f, 0x73, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x46, 0x0a, 0x16, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46,
	0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x35, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x25, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x61, 0x6c, 0x6c, 0x22, 0xad, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x63, 0x6b, 0x73, 0x64, 0x62, 0x5f, 0x6b, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x4b, 0x76, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x63,
	0x6b, 0x73, 0x64, 0x62, 0x5f, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x52, 0x61, 0x66, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6a, 0x65, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x65, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x1d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69,
	0x6b, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x18,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6b, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x6b, 0x76, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x38, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x23, 0x0a, 0x02,
	0x44, 0x42, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x06, 0x0a, 0x02, 0x4b, 0x56, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x46, 0x54, 0x10,
	0x02, 0x2a, 0x90, 0x01, 0x0a, 0x06, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x4e, 0x55, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x56, 0x44, 0x42,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x46, 0x54, 0x44, 0x42, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x45, 0x41, 0x44, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x52,
	0x41, 0x47, 0x45, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x44, 0x10, 0x06, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45,
	0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4d, 0x50, 0x4f,
	0x52, 0x54, 0x10, 0x0a, 0x2a, 0x4c, 0x0a, 0x19, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x6d, 0x6f,
	0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x66, 0x48, 0x61, 0x76, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x10, 0x02, 0x32, 0x9a, 0x0a, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x32, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x07, 0x52, 0x61, 0x66, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x17, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52,
	0x61, 0x66, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x53, 0x63, 0x61, 0x6e, 0x4d, 0x76, 0x63, 0x63, 0x12, 0x18,
	0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4d, 0x76, 0x63,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4d, 0x76, 0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x12, 0x17, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x49, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x2e,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54,
	0x69, 0x6b, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6b, 0x76, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6b, 0x76,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x24, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x56, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x69, 0x6b, 0x76, 0x2e, 0x6b, 0x76, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x69, 0x6e, 0x67, 0x63, 0x61, 0x70, 0x2f, 0x6b, 0x76, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x70, 0x62, 0xe0, 0xe2, 0x1e, 0x01, 0xc8, 0xe2, 0x1e, 0x01, 0xd0,
	0xe2, 0x1e, 0x01, 0xd8, 0xa8, 0x08, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_debugpb_proto_rawDescOnce sync.Once
	file_debugpb_proto_rawDescData = file_debugpb_proto_rawDesc
)

func file_debugpb_proto_rawDescGZIP() []byte {
	file_debugpb_proto_rawDescOnce.Do(func() {
		file_debugpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_debugpb_proto_rawDescData)
	})
	return file_debugpb_proto_rawDescData
}

var file_debugpb_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_debugpb_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_debugpb_proto_goTypes = []interface{}{
	(DB)(0),                                // 0: debugpb.DB
	(MODULE)(0),                            // 1: debugpb.MODULE
	(BottommostLevelCompaction)(0),         // 2: debugpb.BottommostLevelCompaction
	(*GetRequest)(nil),                     // 3: debugpb.GetRequest
	(*GetResponse)(nil),                    // 4: debugpb.GetResponse
	(*RaftLogRequest)(nil),                 // 5: debugpb.RaftLogRequest
	(*RaftLogResponse)(nil),                // 6: debugpb.RaftLogResponse
	(*RegionInfoRequest)(nil),              // 7: debugpb.RegionInfoRequest
	(*RegionInfoResponse)(nil),             // 8: debugpb.RegionInfoResponse
	(*RegionSizeRequest)(nil),              // 9: debugpb.RegionSizeRequest
	(*RegionSizeResponse)(nil),             // 10: debugpb.RegionSizeResponse
	(*ScanMvccRequest)(nil),                // 11: debugpb.ScanMvccRequest
	(*ScanMvccResponse)(nil),               // 12: debugpb.ScanMvccResponse
	(*CompactRequest)(nil),                 // 13: debugpb.CompactRequest
	(*CompactResponse)(nil),                // 14: debugpb.CompactResponse
	(*InjectFailPointRequest)(nil),         // 15: debugpb.InjectFailPointRequest
	(*InjectFailPointResponse)(nil),        // 16: debugpb.InjectFailPointResponse
	(*RecoverFailPointRequest)(nil),        // 17: debugpb.RecoverFailPointRequest
	(*RecoverFailPointResponse)(nil),       // 18: debugpb.RecoverFailPointResponse
	(*ListFailPointsRequest)(nil),          // 19: debugpb.ListFailPointsRequest
	(*ListFailPointsResponse)(nil),         // 20: debugpb.ListFailPointsResponse
	(*GetMetricsRequest)(nil),              // 21: debugpb.GetMetricsRequest
	(*GetMetricsResponse)(nil),             // 22: debugpb.GetMetricsResponse
	(*RegionConsistencyCheckRequest)(nil),  // 23: debugpb.RegionConsistencyCheckRequest
	(*RegionConsistencyCheckResponse)(nil), // 24: debugpb.RegionConsistencyCheckResponse
	(*ModifyTikvConfigRequest)(nil),        // 25: debugpb.ModifyTikvConfigRequest
	(*ModifyTikvConfigResponse)(nil),       // 26: debugpb.ModifyTikvConfigResponse
	(*Property)(nil),                       // 27: debugpb.Property
	(*GetRegionPropertiesRequest)(nil),     // 28: debugpb.GetRegionPropertiesRequest
	(*GetRegionPropertiesResponse)(nil),    // 29: debugpb.GetRegionPropertiesResponse
	(*GetStoreInfoRequest)(nil),            // 30: debugpb.GetStoreInfoRequest
	(*GetStoreInfoResponse)(nil),           // 31: debugpb.GetStoreInfoResponse
	(*GetClusterInfoRequest)(nil),          // 32: debugpb.GetClusterInfoRequest
	(*GetClusterInfoResponse)(nil),         // 33: debugpb.GetClusterInfoResponse
	(*GetAllRegionsInStoreRequest)(nil),    // 34: debugpb.GetAllRegionsInStoreRequest
	(*GetAllRegionsInStoreResponse)(nil),   // 35: debugpb.GetAllRegionsInStoreResponse
	(*RegionSizeResponse_Entry)(nil),       // 36: debugpb.RegionSizeResponse.Entry
	(*ListFailPointsResponse_Entry)(nil),   // 37: debugpb.ListFailPointsResponse.Entry
	(*eraftpb.Entry)(nil),                  // 38: eraftpb.Entry
	(*raft_serverpb.RaftLocalState)(nil),   // 39: raft_serverpb.RaftLocalState
	(*raft_serverpb.RaftApplyState)(nil),   // 40: raft_serverpb.RaftApplyState
	(*raft_serverpb.RegionLocalState)(nil), // 41: raft_serverpb.RegionLocalState
	(*kvrpcpb.MvccInfo)(nil),               // 42: kvrpcpb.MvccInfo
	(kvrpcpb.APIVersion)(0),                // 43: kvrpcpb.APIVersion
}
var file_debugpb_proto_depIdxs = []int32{
	0,  // 0: debugpb.GetRequest.db:type_name -> debugpb.DB
	38, // 1: debugpb.RaftLogResponse.entry:type_name -> eraftpb.Entry
	39, // 2: debugpb.RegionInfoResponse.raft_local_state:type_name -> raft_serverpb.RaftLocalState
	40, // 3: debugpb.RegionInfoResponse.raft_apply_state:type_name -> raft_serverpb.RaftApplyState
	41, // 4: debugpb.RegionInfoResponse.region_local_state:type_name -> raft_serverpb.RegionLocalState
	36, // 5: debugpb.RegionSizeResponse.entries:type_name -> debugpb.RegionSizeResponse.Entry
	42, // 6: debugpb.ScanMvccResponse.info:type_name -> kvrpcpb.MvccInfo
	0,  // 7: debugpb.CompactRequest.db:type_name -> debugpb.DB
	2,  // 8: debugpb.CompactRequest.bottommost_level_compaction:type_name -> debugpb.BottommostLevelCompaction
	37, // 9: debugpb.ListFailPointsResponse.entries:type_name -> debugpb.ListFailPointsResponse.Entry
	1,  // 10: debugpb.ModifyTikvConfigRequest.module:type_name -> debugpb.MODULE
	27, // 11: debugpb.GetRegionPropertiesResponse.props:type_name -> debugpb.Property
	43, // 12: debugpb.GetStoreInfoResponse.api_version:type_name -> kvrpcpb.APIVersion
	3,  // 13: debugpb.Debug.Get:input_type -> debugpb.GetRequest
	5,  // 14: debugpb.Debug.RaftLog:input_type -> debugpb.RaftLogRequest
	7,  // 15: debugpb.Debug.RegionInfo:input_type -> debugpb.RegionInfoRequest
	9,  // 16: debugpb.Debug.RegionSize:input_type -> debugpb.RegionSizeRequest
	11, // 17: debugpb.Debug.ScanMvcc:input_type -> debugpb.ScanMvccRequest
	13, // 18: debugpb.Debug.Compact:input_type -> debugpb.CompactRequest
	15, // 19: debugpb.Debug.InjectFailPoint:input_type -> debugpb.InjectFailPointRequest
	17, // 20: debugpb.Debug.RecoverFailPoint:input_type -> debugpb.RecoverFailPointRequest
	19, // 21: debugpb.Debug.ListFailPoints:input_type -> debugpb.ListFailPointsRequest
	21, // 22: debugpb.Debug.GetMetrics:input_type -> debugpb.GetMetricsRequest
	23, // 23: debugpb.Debug.CheckRegionConsistency:input_type -> debugpb.RegionConsistencyCheckRequest
	25, // 24: debugpb.Debug.ModifyTikvConfig:input_type -> debugpb.ModifyTikvConfigRequest
	28, // 25: debugpb.Debug.GetRegionProperties:input_type -> debugpb.GetRegionPropertiesRequest
	30, // 26: debugpb.Debug.GetStoreInfo:input_type -> debugpb.GetStoreInfoRequest
	32, // 27: debugpb.Debug.GetClusterInfo:input_type -> debugpb.GetClusterInfoRequest
	34, // 28: debugpb.Debug.GetAllRegionsInStore:input_type -> debugpb.GetAllRegionsInStoreRequest
	4,  // 29: debugpb.Debug.Get:output_type -> debugpb.GetResponse
	6,  // 30: debugpb.Debug.RaftLog:output_type -> debugpb.RaftLogResponse
	8,  // 31: debugpb.Debug.RegionInfo:output_type -> debugpb.RegionInfoResponse
	10, // 32: debugpb.Debug.RegionSize:output_type -> debugpb.RegionSizeResponse
	12, // 33: debugpb.Debug.ScanMvcc:output_type -> debugpb.ScanMvccResponse
	14, // 34: debugpb.Debug.Compact:output_type -> debugpb.CompactResponse
	16, // 35: debugpb.Debug.InjectFailPoint:output_type -> debugpb.InjectFailPointResponse
	18, // 36: debugpb.Debug.RecoverFailPoint:output_type -> debugpb.RecoverFailPointResponse
	20, // 37: debugpb.Debug.ListFailPoints:output_type -> debugpb.ListFailPointsResponse
	22, // 38: debugpb.Debug.GetMetrics:output_type -> debugpb.GetMetricsResponse
	24, // 39: debugpb.Debug.CheckRegionConsistency:output_type -> debugpb.RegionConsistencyCheckResponse
	26, // 40: debugpb.Debug.ModifyTikvConfig:output_type -> debugpb.ModifyTikvConfigResponse
	29, // 41: debugpb.Debug.GetRegionProperties:output_type -> debugpb.GetRegionPropertiesResponse
	31, // 42: debugpb.Debug.GetStoreInfo:output_type -> debugpb.GetStoreInfoResponse
	33, // 43: debugpb.Debug.GetClusterInfo:output_type -> debugpb.GetClusterInfoResponse
	35, // 44: debugpb.Debug.GetAllRegionsInStore:output_type -> debugpb.GetAllRegionsInStoreResponse
	29, // [29:45] is the sub-list for method output_type
	13, // [13:29] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_debugpb_proto_init() }
func file_debugpb_proto_init() {
	if File_debugpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_debugpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanMvccRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanMvccResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectFailPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectFailPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverFailPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverFailPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFailPointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFailPointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionConsistencyCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionConsistencyCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyTikvConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyTikvConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionPropertiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRegionsInStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRegionsInStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionSizeResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debugpb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFailPointsResponse_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_debugpb_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_debugpb_proto_goTypes,
		DependencyIndexes: file_debugpb_proto_depIdxs,
		EnumInfos:         file_debugpb_proto_enumTypes,
		MessageInfos:      file_debugpb_proto_msgTypes,
	}.Build()
	File_debugpb_proto = out.File
	file_debugpb_proto_rawDesc = nil
	file_debugpb_proto_goTypes = nil
	file_debugpb_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.1.3. DO NOT EDIT.

type Debug interface {
	Get(ctx context.Context, req *GetRequest) (res *GetResponse, err error)
	RaftLog(ctx context.Context, req *RaftLogRequest) (res *RaftLogResponse, err error)
	RegionInfo(ctx context.Context, req *RegionInfoRequest) (res *RegionInfoResponse, err error)
	RegionSize(ctx context.Context, req *RegionSizeRequest) (res *RegionSizeResponse, err error)
	ScanMvcc(req *ScanMvccRequest, stream Debug_ScanMvccServer) (err error)
	Compact(ctx context.Context, req *CompactRequest) (res *CompactResponse, err error)
	InjectFailPoint(ctx context.Context, req *InjectFailPointRequest) (res *InjectFailPointResponse, err error)
	RecoverFailPoint(ctx context.Context, req *RecoverFailPointRequest) (res *RecoverFailPointResponse, err error)
	ListFailPoints(ctx context.Context, req *ListFailPointsRequest) (res *ListFailPointsResponse, err error)
	GetMetrics(ctx context.Context, req *GetMetricsRequest) (res *GetMetricsResponse, err error)
	CheckRegionConsistency(ctx context.Context, req *RegionConsistencyCheckRequest) (res *RegionConsistencyCheckResponse, err error)
	ModifyTikvConfig(ctx context.Context, req *ModifyTikvConfigRequest) (res *ModifyTikvConfigResponse, err error)
	GetRegionProperties(ctx context.Context, req *GetRegionPropertiesRequest) (res *GetRegionPropertiesResponse, err error)
	GetStoreInfo(ctx context.Context, req *GetStoreInfoRequest) (res *GetStoreInfoResponse, err error)
	GetClusterInfo(ctx context.Context, req *GetClusterInfoRequest) (res *GetClusterInfoResponse, err error)
	GetAllRegionsInStore(ctx context.Context, req *GetAllRegionsInStoreRequest) (res *GetAllRegionsInStoreResponse, err error)
}

type Debug_ScanMvccServer interface {
	streaming.Stream
	Send(*ScanMvccResponse) error
}
